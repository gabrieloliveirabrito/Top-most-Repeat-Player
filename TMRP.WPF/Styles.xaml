<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TMRP.WPF"
                    xmlns:converters="clr-namespace:TMRP.WPF.Converters">
    <local:ImageData x:Key="ImageData" />
    
    <converters:TimeSpanConverter x:Key="TimeSpanConverter" />
    <converters:TimeSpanConverter x:Key="TimeSpanConverterNoMill" WithMilliseconds="False" />
    <converters:ImageDataConverter x:Key="ImageDataConverter" />

    <Style x:Key="PlayerWindow" TargetType="Window">
        <Setter Property="Title" Value="TMRP" />
        <Setter Property="Topmost" Value="{Binding Configuration.TopMost, FallbackValue=False}" />
        <Setter Property="MinHeight" Value="200" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="Height" Value="{Binding Configuration.Width, Mode=TwoWay, Delay=500, FallbackValue=450}" />
        <Setter Property="Width" Value="{Binding Configuration.Height, Mode=TwoWay, Delay=500,FallbackValue=800}" />
        <Setter Property="Left" Value="{Binding Configuration.PosX, Mode=TwoWay, Delay=500}" />
        <Setter Property="Top" Value="{Binding Configuration.PosY, Mode=TwoWay, Delay=500}" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="AllowsTransparency" Value="False" />
        <Setter Property="BorderThickness" Value="1, 1, 1, 1" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding Loaded}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Loaded}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Configuration.Borderless}" Value="True">
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome
                            CornerRadius="0" 
                            GlassFrameThickness="0" 
                            UseAeroCaptionButtons="False"
                        />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding Configuration.Borderless}" Value="False">
                <Setter Property="WindowStyle" Value="SingleBorderWindow" />
                <Setter Property="WindowChrome.WindowChrome" Value="{x:Null}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding FullScreen}" Value="True">
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="WindowState" Value="Maximized" />
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Paused}" Value="True">
                <Setter Property="Title" Value="TMRP - Paused" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Paused}" Value="False">
                <Setter Property="Title">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}TMRP - Volume {0}% - {1}/{2}">
                            <Binding Source="Configuration" Path="Volume" />
                            <Binding Path="Time" Converter="{StaticResource TimeSpanConverterNoMill}" />
                            <Binding Path="Length" Converter="{StaticResource TimeSpanConverterNoMill}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EventCanvas" TargetType="Canvas">
        <Setter Property="Grid.Row" Value="0" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="#02000000" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>
    
    <Style x:Key="ControlsPanel" TargetType="DockPanel">
        <Setter Property="Grid.Row" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding Controls}" Value="True">
                <Setter Property="Background" Value="#1A000000" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Controls}" Value="False">
                <Setter Property="Background" Value="#03000000" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ControlComponent" TargetType="Control">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinWidth" Value="25" />
        <Setter Property="Margin" Value="5" />
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding Controls}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Controls}" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ControlButton" TargetType="Button" BasedOn="{StaticResource ControlComponent}">
        
    </Style>

    <Style x:Key="PlayButton" TargetType="Button" BasedOn="{StaticResource ControlButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Paused}" Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image 
                                Source="{Binding Source={StaticResource ImageData}, Path=PlayButton, Converter={StaticResource ImageDataConverter}}" 
                                Width="24"
                                Height="24"
                            />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Paused}" Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Image 
                                Source="{Binding Source={StaticResource ImageData}, Path=PauseButton, Converter={StaticResource ImageDataConverter}}" 
                                Width="24"
                                Height="24"
                            />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TimeSlider" TargetType="Slider" BasedOn="{StaticResource ControlComponent}">
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="IsMoveToPointEnabled" Value="True" />

        <Setter Property="Value" Value="{Binding Time}" />
        <Setter Property="Maximum" Value="{Binding Length}" />

        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock>
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}/{1}">
                            <Binding Path="Time" Converter="{StaticResource TimeSpanConverter}" />
                            <Binding Path="Length" Converter="{StaticResource TimeSpanConverter}" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>